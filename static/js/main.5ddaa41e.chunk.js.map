{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["getWindowDimensions","_window","window","width","innerWidth","height","innerHeight","preset","slides","animation","timing","easeInOutSine","speed","interval","App","_useState","useState","_useState2","_slicedToArray","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","_useState3","_objectSpread","size","props","_jsx","className","children","_jsxs","Bearing","href","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"4PAMA,SAASA,IACP,IAAAC,EAAmDC,OACnD,MAAO,CACLC,MAFuBF,EAAjBG,WAGNC,OAH4CJ,EAAnBK,YAK7B,CAiBA,IAAMC,EAAS,CACbC,OAAQ,CACN,2MACA,0MACA,6KACA,gNAEFC,UAAW,CACTC,OAAQC,IACRC,MAAO,IACPC,SAAU,MAyCCC,MArCf,WACE,IAAQX,EA9BV,WACE,IAAAY,EAAgDC,mBAAShB,KAAsBiB,EAAAC,YAAAH,EAAA,GAAxEI,EAAgBF,EAAA,GAAEG,EAAmBH,EAAA,GAW5C,OATAI,qBAAU,WACR,SAASC,IACPF,EAAoBpB,IACtB,CAGA,OADAE,OAAOqB,iBAAiB,SAAUD,GAC3B,kBAAMpB,OAAOsB,oBAAoB,SAAUF,EAAc,CAClE,GAAG,IAEIH,CACT,CAiBoBM,GAAVtB,MAERuB,EAAgBV,mBAAQW,wBAAC,CAAC,EACrBpB,GAAM,IACTqB,KAAM,CACJzB,MAAe,IAARA,EACPE,OAAiB,IAARF,EAAe,SAJrB0B,EAMLX,YAAAQ,EAAA,GANU,GAQZ,OACEI,cAAA,OAAKC,UAAU,MAAKC,SAClBC,eAAA,UAAQF,UAAU,aAAYC,SAAA,CAC5BF,cAAA,OAAAE,SACEF,cAACI,IAAOP,YAAA,GAAKE,MAEfC,cAAA,OAAAE,SACEC,eAAA,KAAAD,SAAA,CAAG,eACWF,cAAA,KAAAE,SAAG,iBACd,IACDF,cAAA,KAAGC,UAAU,WAAWI,KAAK,yJAAwJH,SAAC,OAAM,OAC5LF,cAAA,KAAGC,UAAU,WAAWI,KAAK,uHAAsHH,SAAC,OACnJ,IAAI,OACDF,cAAA,KAAAE,SAAG,aACN,IACDF,cAAA,KAAGC,UAAU,WAAWI,KAAK,wJAAuJH,SAAC,OAAM,OAC3LF,cAAA,KAAGC,UAAU,WAAWI,KAAK,qJAAoJH,SAAC,OACjL,IAAI,sBAOjB,EChEeI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,SAAAC,GAAkD,IAA/CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,EACV,GAEJ,ECNaS,IAASC,WACpBC,SAASC,eAAe,SAErBC,OACHpB,cAACqB,IAAMC,WAAU,CAAApB,SACfF,cAAChB,EAAG,OAORsB,G","file":"static/js/main.5ddaa41e.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Bearing from \"bearing\";\nimport { easeInOutSine } from 'bearing/easing';\nimport { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nconst preset = {\n  slides: [\n    'https://img.freepik.com/free-vector/black-banner-with-yellow-geometric-shapes_1017-32327.jpg?w=2000&t=st=1676911615~exp=1676912215~hmac=9bc9803086f640d718e652316a48d38e760774660282d1c70399bc980f1a18c5',\n    'https://img.freepik.com/free-vector/stylish-glowing-digital-red-lines-banner_1017-23964.jpg?w=2000&t=st=1676911616~exp=1676912216~hmac=a26bca7afb45ac5a115e3431de565a6b92b29a4019a1e4cdc520dcf5bb1a440d',\n    'https://img.freepik.com/free-vector/basic-rgb_53876-170352.jpg?w=2000&t=st=1676911642~exp=1676912242~hmac=44b36d832e9e15191a3060ee931cab4eb2b227488852348bb3d6bcd2e4e85aea',\n    'https://img.freepik.com/free-photo/particle-lines-futuristic-network-background_53876-129729.jpg?w=2000&t=st=1676911643~exp=1676912243~hmac=b2757aa72c4ad5d32a5dd2b9400a8013f220bf3f0678178b71b136566556b2c8',\n  ],\n  animation: {\n    timing: easeInOutSine,\n    speed: 500,\n    interval: 2000\n  }\n};\n\nfunction App() {\n  const { width } = useWindowDimensions();\n\n  const [props] = useState({\n    ...preset,\n    size: {\n      width: width * .85,\n      height: (width * .85) / 2.65\n    }\n  })\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div>\n          <Bearing {...props} />\n        </div>\n        <div>\n          <p>\n            Images from <u>rawpixel.com</u>\n            {' '}\n            <a className=\"App-link\" href=\"https://www.freepik.com/free-photo/particle-lines-futuristic-network-background_17850183.htm#query=wide%20banner&position=6&from_view=search&track=ais\">#1</a>&nbsp;\n            <a className=\"App-link\" href=\"https://www.freepik.com/free-vector/basic-rgb_31067562.htm#query=wide%20banner&position=4&from_view=search&track=ais\">#2</a>\n            {' '}\n            and <u>starline</u>\n            {' '}\n            <a className=\"App-link\" href=\"https://www.freepik.com/free-vector/black-banner-with-yellow-geometric-shapes_15355888.htm#query=wide%20banner&position=0&from_view=keyword&track=ais\">#1</a>&nbsp;\n            <a className=\"App-link\" href=\"https://www.freepik.com/free-vector/stylish-glowing-digital-red-lines-banner_7082673.htm#query=wide%20banner&position=1&from_view=search&track=ais\">#2</a>\n            {' '}\n            on Freepik\n          </p>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}